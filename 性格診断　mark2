<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>性格診断</title>
  <style>
    body {
      font-family: sans-serif;
      background-color: #f4f4f9;
      padding: 2rem;
    }
    .question {
      margin-bottom: 2rem;
      background-color: white;
      padding: 1rem;
      border-radius: 0.5rem;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    .answers button {
      margin: 0.5rem;
      padding: 0.5rem 1rem;
      border: none;
      border-radius: 0.5rem;
      cursor: pointer;
      font-size: 1rem;
      transition: transform 0.1s ease, background-color 0.3s;
    }
    .answers button:hover {
      background-color: #ddd;
    }
    .answers button.selected {
      background-color: #90ee90 !important;
    }
    .answers button:active {
      transform: scale(0.95);
    }
    .result-category {
      margin-bottom: 1.5rem;
      padding: 1rem;
      border-left: 5px solid;
      border-radius: 0.75rem;
      background-size: cover;
      background-position: center;
      color: #333;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }
    #result {
      margin-top: 2rem;
      font-size: 1.1rem;
      white-space: pre-wrap;
    }
    .share-button {
      margin-top: 1rem;
      display: inline-block;
      padding: 0.5rem 1rem;
      background-color: #4caf50;
      color: white;
      border-radius: 0.5rem;
      text-decoration: none;
    }
  </style>
</head>
<body>
  <h1>性格診断</h1>
  <div id="quiz"></div>
  <div style="text-align: center; margin-top: 2rem;">
    <button onclick="showResult()" style="padding: 0.5rem 1rem; font-size: 1rem; border-radius: 0.5rem; cursor: pointer;">結果</button>
  </div>
  <div id="result"></div>

  <script>
    const questions = [
      { text: "人前で話すのが好きだ。", category: "extraversion" },
      { text: "新しい友達を作るのが得意だ。", category: "extraversion" },
      { text: "感情を表に出すタイプだ。", category: "extraversion" },
      { text: "一人の時間を大切にしている。", category: "introversion" },
      { text: "静かな場所が落ち着く。", category: "introversion" },
      { text: "人混みでは疲れやすい。", category: "introversion" },
      { text: "新しいことに挑戦するのが好きだ。", category: "progressive" },
      { text: "ルールに縛られず自由に考える方だ。", category: "progressive" },
      { text: "型破りなアイデアに惹かれる。", category: "progressive" },
      { text: "変化より安定を好む。", category: "conservative" },
      { text: "計画を立てるのが好きだ。", category: "conservative" },
      { text: "昔ながらの方法を好む。", category: "conservative" },
      { text: "リーダーシップをとるのが好きだ。", category: "leader" },
      { text: "他人をまとめるのが得意だ。", category: "leader" },
      { text: "意見をはっきり伝える方だ。", category: "leader" },
      { text: "周囲を引っ張るより支える方が多い。", category: "nonleader" },
      { text: "あまり目立ちたくない。", category: "nonleader" },
      { text: "自分より他人を優先することが多い。", category: "nonleader" },
      { text: "自然や芸術に触れるのが好きだ。", category: "nature" },
      { text: "美しい風景を見て感動する。", category: "nature" },
      { text: "植物や動物に癒される。", category: "nature" },
      { text: "機械やテクノロジーに興味がある。", category: "science" },
      { text: "科学的な考え方が得意だ。", category: "science" },
      { text: "データや数字を分析するのが好き。", category: "science" },
      { text: "困っている人を見ると助けたくなる。", category: "agreeable" },
      { text: "他人の意見を尊重するようにしている。", category: "agreeable" },
      { text: "他人の感情に敏感だと思う。", category: "agreeable" },
      { text: "些細なことで緊張することがある。", category: "neurotic" },
      { text: "落ち込んだ気分が長引くことが多い。", category: "neurotic" },
      { text: "細かいことが気になってしまう。", category: "neurotic" },
      { text: "約束は必ず守るようにしている。", category: "conscientious" },
      { text: "何事も真面目に取り組む方だ。", category: "conscientious" },
      { text: "計画通りに進めるのが好きだ。", category: "conscientious" }
    ];

    const scores = {
      extraversion: 0, introversion: 0,
      progressive: 0, conservative: 0,
      leader: 0, nonleader: 0,
      nature: 0, science: 0,
      agreeable: 0, neurotic: 0, conscientious: 0
    };

    function shuffleArray(array) {
      for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
      }
    }

    shuffleArray(questions);

    const quizContainer = document.getElementById('quiz');
    questions.forEach((q, i) => {
      const questionDiv = document.createElement('div');
      questionDiv.className = 'question';
      questionDiv.innerHTML = `<p><strong>質問${i + 1}</strong>: ${q.text}</p>`;
      const answerDiv = document.createElement('div');
      answerDiv.className = 'answers';
      ["あてはまる", "どちらでもない", "あてはまらない"].forEach((choice, index) => {
        const button = document.createElement('button');
        button.textContent = choice;
        button.onclick = () => {
          Array.from(answerDiv.children).forEach(btn => btn.classList.remove('selected'));
          button.classList.add('selected');
          button.dataset.score = [1, 0, -1][index];
        };
        answerDiv.appendChild(button);
      });
      questionDiv.appendChild(answerDiv);
      quizContainer.appendChild(questionDiv);
    });

    function showResult() {
      Object.keys(scores).forEach(k => scores[k] = 0);
      questions.forEach((question, i) => {
        const selected = document.querySelectorAll('.question')[i].querySelector('button.selected');
        if (selected) {
          const score = parseInt(selected.dataset.score);
          scores[question.category] += score;
        }
      });

      // 結果生成（ここは省略：既に反映済の処理）
    }
  </script>
</body>
</html>
